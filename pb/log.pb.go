// Code generated by protoc-gen-go. DO NOT EDIT.
// source: log.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DHCPLogsRequest struct {
	MAC                  string   `protobuf:"bytes,1,opt,name=MAC,proto3" json:"MAC,omitempty"`
	From                 string   `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DHCPLogsRequest) Reset()         { *m = DHCPLogsRequest{} }
func (m *DHCPLogsRequest) String() string { return proto.CompactTextString(m) }
func (*DHCPLogsRequest) ProtoMessage()    {}
func (*DHCPLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{0}
}

func (m *DHCPLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHCPLogsRequest.Unmarshal(m, b)
}
func (m *DHCPLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHCPLogsRequest.Marshal(b, m, deterministic)
}
func (m *DHCPLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHCPLogsRequest.Merge(m, src)
}
func (m *DHCPLogsRequest) XXX_Size() int {
	return xxx_messageInfo_DHCPLogsRequest.Size(m)
}
func (m *DHCPLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DHCPLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DHCPLogsRequest proto.InternalMessageInfo

func (m *DHCPLogsRequest) GetMAC() string {
	if m != nil {
		return m.MAC
	}
	return ""
}

func (m *DHCPLogsRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *DHCPLogsRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

type DHCPLog struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Timestamp            string   `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DHCPLog) Reset()         { *m = DHCPLog{} }
func (m *DHCPLog) String() string { return proto.CompactTextString(m) }
func (*DHCPLog) ProtoMessage()    {}
func (*DHCPLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{1}
}

func (m *DHCPLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHCPLog.Unmarshal(m, b)
}
func (m *DHCPLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHCPLog.Marshal(b, m, deterministic)
}
func (m *DHCPLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHCPLog.Merge(m, src)
}
func (m *DHCPLog) XXX_Size() int {
	return xxx_messageInfo_DHCPLog.Size(m)
}
func (m *DHCPLog) XXX_DiscardUnknown() {
	xxx_messageInfo_DHCPLog.DiscardUnknown(m)
}

var xxx_messageInfo_DHCPLog proto.InternalMessageInfo

func (m *DHCPLog) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *DHCPLog) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *DHCPLog) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DHCPLogsResponse struct {
	Log                  []*DHCPLog `protobuf:"bytes,1,rep,name=log,proto3" json:"log,omitempty"`
	Err                  string     `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DHCPLogsResponse) Reset()         { *m = DHCPLogsResponse{} }
func (m *DHCPLogsResponse) String() string { return proto.CompactTextString(m) }
func (*DHCPLogsResponse) ProtoMessage()    {}
func (*DHCPLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{2}
}

func (m *DHCPLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHCPLogsResponse.Unmarshal(m, b)
}
func (m *DHCPLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHCPLogsResponse.Marshal(b, m, deterministic)
}
func (m *DHCPLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHCPLogsResponse.Merge(m, src)
}
func (m *DHCPLogsResponse) XXX_Size() int {
	return xxx_messageInfo_DHCPLogsResponse.Size(m)
}
func (m *DHCPLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DHCPLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DHCPLogsResponse proto.InternalMessageInfo

func (m *DHCPLogsResponse) GetLog() []*DHCPLog {
	if m != nil {
		return m.Log
	}
	return nil
}

func (m *DHCPLogsResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type SwitchLogsRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	From                 string   `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SwitchLogsRequest) Reset()         { *m = SwitchLogsRequest{} }
func (m *SwitchLogsRequest) String() string { return proto.CompactTextString(m) }
func (*SwitchLogsRequest) ProtoMessage()    {}
func (*SwitchLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{3}
}

func (m *SwitchLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchLogsRequest.Unmarshal(m, b)
}
func (m *SwitchLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchLogsRequest.Marshal(b, m, deterministic)
}
func (m *SwitchLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchLogsRequest.Merge(m, src)
}
func (m *SwitchLogsRequest) XXX_Size() int {
	return xxx_messageInfo_SwitchLogsRequest.Size(m)
}
func (m *SwitchLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchLogsRequest proto.InternalMessageInfo

func (m *SwitchLogsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SwitchLogsRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *SwitchLogsRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

type SwitchLog struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ts                   string   `protobuf:"bytes,3,opt,name=ts,proto3" json:"ts,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SwitchLog) Reset()         { *m = SwitchLog{} }
func (m *SwitchLog) String() string { return proto.CompactTextString(m) }
func (*SwitchLog) ProtoMessage()    {}
func (*SwitchLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{4}
}

func (m *SwitchLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchLog.Unmarshal(m, b)
}
func (m *SwitchLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchLog.Marshal(b, m, deterministic)
}
func (m *SwitchLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchLog.Merge(m, src)
}
func (m *SwitchLog) XXX_Size() int {
	return xxx_messageInfo_SwitchLog.Size(m)
}
func (m *SwitchLog) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchLog.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchLog proto.InternalMessageInfo

func (m *SwitchLog) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *SwitchLog) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SwitchLog) GetTs() string {
	if m != nil {
		return m.Ts
	}
	return ""
}

func (m *SwitchLog) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SwitchLogsResponse struct {
	Log                  []*SwitchLog `protobuf:"bytes,1,rep,name=log,proto3" json:"log,omitempty"`
	Err                  string       `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SwitchLogsResponse) Reset()         { *m = SwitchLogsResponse{} }
func (m *SwitchLogsResponse) String() string { return proto.CompactTextString(m) }
func (*SwitchLogsResponse) ProtoMessage()    {}
func (*SwitchLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{5}
}

func (m *SwitchLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchLogsResponse.Unmarshal(m, b)
}
func (m *SwitchLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchLogsResponse.Marshal(b, m, deterministic)
}
func (m *SwitchLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchLogsResponse.Merge(m, src)
}
func (m *SwitchLogsResponse) XXX_Size() int {
	return xxx_messageInfo_SwitchLogsResponse.Size(m)
}
func (m *SwitchLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchLogsResponse proto.InternalMessageInfo

func (m *SwitchLogsResponse) GetLog() []*SwitchLog {
	if m != nil {
		return m.Log
	}
	return nil
}

func (m *SwitchLogsResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type SimilarSwitchesRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimilarSwitchesRequest) Reset()         { *m = SimilarSwitchesRequest{} }
func (m *SimilarSwitchesRequest) String() string { return proto.CompactTextString(m) }
func (*SimilarSwitchesRequest) ProtoMessage()    {}
func (*SimilarSwitchesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{6}
}

func (m *SimilarSwitchesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimilarSwitchesRequest.Unmarshal(m, b)
}
func (m *SimilarSwitchesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimilarSwitchesRequest.Marshal(b, m, deterministic)
}
func (m *SimilarSwitchesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimilarSwitchesRequest.Merge(m, src)
}
func (m *SimilarSwitchesRequest) XXX_Size() int {
	return xxx_messageInfo_SimilarSwitchesRequest.Size(m)
}
func (m *SimilarSwitchesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SimilarSwitchesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SimilarSwitchesRequest proto.InternalMessageInfo

func (m *SimilarSwitchesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SimilarSwitch struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IP                   string   `protobuf:"bytes,2,opt,name=IP,proto3" json:"IP,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimilarSwitch) Reset()         { *m = SimilarSwitch{} }
func (m *SimilarSwitch) String() string { return proto.CompactTextString(m) }
func (*SimilarSwitch) ProtoMessage()    {}
func (*SimilarSwitch) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{7}
}

func (m *SimilarSwitch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimilarSwitch.Unmarshal(m, b)
}
func (m *SimilarSwitch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimilarSwitch.Marshal(b, m, deterministic)
}
func (m *SimilarSwitch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimilarSwitch.Merge(m, src)
}
func (m *SimilarSwitch) XXX_Size() int {
	return xxx_messageInfo_SimilarSwitch.Size(m)
}
func (m *SimilarSwitch) XXX_DiscardUnknown() {
	xxx_messageInfo_SimilarSwitch.DiscardUnknown(m)
}

var xxx_messageInfo_SimilarSwitch proto.InternalMessageInfo

func (m *SimilarSwitch) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SimilarSwitch) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

type SimilarSwitchesResponse struct {
	Switch               []*SimilarSwitch `protobuf:"bytes,1,rep,name=switch,proto3" json:"switch,omitempty"`
	Err                  string           `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SimilarSwitchesResponse) Reset()         { *m = SimilarSwitchesResponse{} }
func (m *SimilarSwitchesResponse) String() string { return proto.CompactTextString(m) }
func (*SimilarSwitchesResponse) ProtoMessage()    {}
func (*SimilarSwitchesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{8}
}

func (m *SimilarSwitchesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimilarSwitchesResponse.Unmarshal(m, b)
}
func (m *SimilarSwitchesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimilarSwitchesResponse.Marshal(b, m, deterministic)
}
func (m *SimilarSwitchesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimilarSwitchesResponse.Merge(m, src)
}
func (m *SimilarSwitchesResponse) XXX_Size() int {
	return xxx_messageInfo_SimilarSwitchesResponse.Size(m)
}
func (m *SimilarSwitchesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SimilarSwitchesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SimilarSwitchesResponse proto.InternalMessageInfo

func (m *SimilarSwitchesResponse) GetSwitch() []*SimilarSwitch {
	if m != nil {
		return m.Switch
	}
	return nil
}

func (m *SimilarSwitchesResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*DHCPLogsRequest)(nil), "pb.DHCPLogsRequest")
	proto.RegisterType((*DHCPLog)(nil), "pb.DHCPLog")
	proto.RegisterType((*DHCPLogsResponse)(nil), "pb.DHCPLogsResponse")
	proto.RegisterType((*SwitchLogsRequest)(nil), "pb.SwitchLogsRequest")
	proto.RegisterType((*SwitchLog)(nil), "pb.SwitchLog")
	proto.RegisterType((*SwitchLogsResponse)(nil), "pb.SwitchLogsResponse")
	proto.RegisterType((*SimilarSwitchesRequest)(nil), "pb.SimilarSwitchesRequest")
	proto.RegisterType((*SimilarSwitch)(nil), "pb.SimilarSwitch")
	proto.RegisterType((*SimilarSwitchesResponse)(nil), "pb.SimilarSwitchesResponse")
}

func init() {
	proto.RegisterFile("log.proto", fileDescriptor_a153da538f858886)
}

var fileDescriptor_a153da538f858886 = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xd1, 0x4f, 0xea, 0x30,
	0x14, 0xc6, 0xef, 0x3a, 0x02, 0xd9, 0x21, 0x70, 0xe1, 0xdc, 0x2b, 0x2e, 0xa8, 0x91, 0xec, 0x09,
	0x13, 0xc3, 0x03, 0xbc, 0xf9, 0xa4, 0xc1, 0x64, 0x12, 0x35, 0xe2, 0x48, 0x4c, 0x7c, 0x1c, 0xa6,
	0xce, 0x25, 0x8c, 0xce, 0xb5, 0xc6, 0x7f, 0xd4, 0x3f, 0xc8, 0xb4, 0x74, 0xa3, 0x73, 0x68, 0x7c,
	0x3b, 0xfb, 0x7a, 0xfa, 0x9d, 0xef, 0x77, 0x9a, 0x81, 0xb3, 0x62, 0xd1, 0x28, 0xcd, 0x98, 0x60,
	0x48, 0xd2, 0xa5, 0xe7, 0xc3, 0xdf, 0xcb, 0xab, 0xe9, 0xfc, 0x86, 0x45, 0x3c, 0xa0, 0xaf, 0x6f,
	0x94, 0x0b, 0xec, 0x80, 0x7d, 0x7b, 0x31, 0x75, 0xad, 0x81, 0x35, 0x74, 0x02, 0x59, 0x22, 0x42,
	0xed, 0x39, 0x63, 0x89, 0x4b, 0x94, 0xa4, 0x6a, 0x6c, 0x03, 0x11, 0xcc, 0xb5, 0x95, 0x42, 0x04,
	0xf3, 0xee, 0xa1, 0xa1, 0x8d, 0xe4, 0x51, 0x9c, 0xea, 0xfb, 0x24, 0x4e, 0xf1, 0x10, 0x1c, 0x11,
	0x27, 0x94, 0x8b, 0x30, 0x49, 0xb5, 0xc7, 0x56, 0x40, 0x17, 0x1a, 0x09, 0xe5, 0x3c, 0x8c, 0xa8,
	0x76, 0xcb, 0x3f, 0xbd, 0x29, 0x74, 0xb6, 0xd9, 0x78, 0xca, 0xd6, 0x9c, 0xe2, 0x11, 0xd8, 0x2b,
	0x16, 0xb9, 0xd6, 0xc0, 0x1e, 0x36, 0xc7, 0xcd, 0x51, 0xba, 0x1c, 0xe9, 0x96, 0x40, 0xea, 0x32,
	0x3b, 0xcd, 0x32, 0x3d, 0x44, 0x96, 0xde, 0x35, 0x74, 0x17, 0xef, 0xb1, 0x78, 0x7a, 0x31, 0x11,
	0x11, 0x6a, 0xeb, 0x30, 0xa1, 0x3a, 0xa3, 0xaa, 0x7f, 0x05, 0xf9, 0x08, 0x4e, 0x61, 0x56, 0xc1,
	0xcc, 0x4d, 0x89, 0x61, 0x2a, 0x0d, 0x78, 0x61, 0xc0, 0x4d, 0xd8, 0x5a, 0x19, 0xd6, 0x07, 0x34,
	0x73, 0x6a, 0xdc, 0x63, 0x13, 0xb7, 0x25, 0x71, 0x8b, 0xa6, 0xef, 0x80, 0x4f, 0xa1, 0xb7, 0x88,
	0x93, 0x78, 0x15, 0x66, 0x9b, 0x56, 0xfa, 0x13, 0xb5, 0x37, 0x81, 0x56, 0xa9, 0x7b, 0xe7, 0x6a,
	0xda, 0x40, 0x66, 0x73, 0x3d, 0x83, 0xcc, 0xe6, 0xde, 0x03, 0xec, 0x57, 0x46, 0xe8, 0xc0, 0x27,
	0x50, 0xe7, 0x4a, 0xd3, 0x99, 0xbb, 0x2a, 0xb3, 0xd9, 0x1c, 0xe8, 0x86, 0x6a, 0xf4, 0xf1, 0x87,
	0x05, 0xb6, 0xdc, 0xec, 0x19, 0x34, 0x7d, 0x2a, 0xf2, 0xb7, 0xc7, 0x7f, 0xc6, 0x33, 0xe7, 0x30,
	0xfd, 0xff, 0x65, 0x71, 0x33, 0xde, 0xfb, 0x83, 0xe7, 0xd0, 0xf2, 0xa9, 0xd8, 0xae, 0x12, 0xf7,
	0x4a, 0x5b, 0x2b, 0xee, 0xf7, 0xbe, 0xca, 0x85, 0xc3, 0x1d, 0xa0, 0x74, 0x28, 0x03, 0x62, 0xbf,
	0x02, 0x52, 0x2c, 0xb6, 0x7f, 0xb0, 0xf3, 0x2c, 0x37, 0x5c, 0xd6, 0xd5, 0xef, 0x36, 0xf9, 0x0c,
	0x00, 0x00, 0xff, 0xff, 0xbe, 0xfa, 0xb7, 0xfe, 0x7b, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LogClient is the client API for Log service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogClient interface {
	GetDHCPLogs(ctx context.Context, in *DHCPLogsRequest, opts ...grpc.CallOption) (*DHCPLogsResponse, error)
	GetSwitchLogs(ctx context.Context, in *SwitchLogsRequest, opts ...grpc.CallOption) (*SwitchLogsResponse, error)
	GetSimilarSwitches(ctx context.Context, in *SimilarSwitchesRequest, opts ...grpc.CallOption) (*SimilarSwitchesResponse, error)
}

type logClient struct {
	cc grpc.ClientConnInterface
}

func NewLogClient(cc grpc.ClientConnInterface) LogClient {
	return &logClient{cc}
}

func (c *logClient) GetDHCPLogs(ctx context.Context, in *DHCPLogsRequest, opts ...grpc.CallOption) (*DHCPLogsResponse, error) {
	out := new(DHCPLogsResponse)
	err := c.cc.Invoke(ctx, "/pb.Log/GetDHCPLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logClient) GetSwitchLogs(ctx context.Context, in *SwitchLogsRequest, opts ...grpc.CallOption) (*SwitchLogsResponse, error) {
	out := new(SwitchLogsResponse)
	err := c.cc.Invoke(ctx, "/pb.Log/GetSwitchLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logClient) GetSimilarSwitches(ctx context.Context, in *SimilarSwitchesRequest, opts ...grpc.CallOption) (*SimilarSwitchesResponse, error) {
	out := new(SimilarSwitchesResponse)
	err := c.cc.Invoke(ctx, "/pb.Log/GetSimilarSwitches", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogServer is the server API for Log service.
type LogServer interface {
	GetDHCPLogs(context.Context, *DHCPLogsRequest) (*DHCPLogsResponse, error)
	GetSwitchLogs(context.Context, *SwitchLogsRequest) (*SwitchLogsResponse, error)
	GetSimilarSwitches(context.Context, *SimilarSwitchesRequest) (*SimilarSwitchesResponse, error)
}

// UnimplementedLogServer can be embedded to have forward compatible implementations.
type UnimplementedLogServer struct {
}

func (*UnimplementedLogServer) GetDHCPLogs(ctx context.Context, req *DHCPLogsRequest) (*DHCPLogsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDHCPLogs not implemented")
}
func (*UnimplementedLogServer) GetSwitchLogs(ctx context.Context, req *SwitchLogsRequest) (*SwitchLogsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSwitchLogs not implemented")
}
func (*UnimplementedLogServer) GetSimilarSwitches(ctx context.Context, req *SimilarSwitchesRequest) (*SimilarSwitchesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSimilarSwitches not implemented")
}

func RegisterLogServer(s *grpc.Server, srv LogServer) {
	s.RegisterService(&_Log_serviceDesc, srv)
}

func _Log_GetDHCPLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DHCPLogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServer).GetDHCPLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Log/GetDHCPLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServer).GetDHCPLogs(ctx, req.(*DHCPLogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Log_GetSwitchLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SwitchLogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServer).GetSwitchLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Log/GetSwitchLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServer).GetSwitchLogs(ctx, req.(*SwitchLogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Log_GetSimilarSwitches_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SimilarSwitchesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServer).GetSimilarSwitches(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Log/GetSimilarSwitches",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServer).GetSimilarSwitches(ctx, req.(*SimilarSwitchesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Log_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Log",
	HandlerType: (*LogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDHCPLogs",
			Handler:    _Log_GetDHCPLogs_Handler,
		},
		{
			MethodName: "GetSwitchLogs",
			Handler:    _Log_GetSwitchLogs_Handler,
		},
		{
			MethodName: "GetSimilarSwitches",
			Handler:    _Log_GetSimilarSwitches_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "log.proto",
}
