syntax = "proto3";

package pb;

import "google/api/annotations.proto";

option go_package = ".;pb";

service logService {
    rpc GetDHCPLogs (DHCPLogsRequest) returns (DHCPLogsResponse) {
        option (google.api.http) = {
        post: "/api/dhcp"
        body: "*"
      };
    }
    rpc GetNginxLogs (NginxLogsRequest) returns (NginxLogsResponse) {
        option (google.api.http) = {
        post: "/api/nginx"
        body: "*"
      };
    }
    rpc GetNginxHosts (NginxHostsRequest) returns (NginxHostsResponse) {
        option (google.api.http) = {
        post: "/api/hosts"
        body: "*"
      };
    }
    rpc GetSwitchLogs (SwitchLogsRequest) returns (SwitchLogsResponse) {
        option (google.api.http) = {
        post: "/api/switches"
        body: "*"
      };
    }
    rpc GetSimilarSwitches (SimilarSwitchesRequest) returns (SimilarSwitchesResponse) {
        option (google.api.http) = {
        post: "/api/similar"
        body: "*"
      };
    }
}

message DHCPLogsRequest {
    string MAC = 1;
    int64 from = 2;
    int64 to = 3;
}

message DHCPLog {
    string ip = 1;
    string timestamp = 2;
    string message = 3;
}

message DHCPLogsResponse {
    repeated DHCPLog logs = 1;
}

message NginxLogsRequest {
    string hostname = 1;
    int64 from = 2;
    int64 to = 3;
}

message NginxLog {
    string timestamp = 1;
    string message = 2;
    string facility = 3;
    string severity = 4;
}

message NginxLogsResponse {
    repeated NginxLog logs = 1;
}

message NginxHostsRequest{}

message NginxHost {
    string name = 1;
}

message NginxHostsResponse {
    repeated NginxHost hosts = 1;
}

message SwitchLogsRequest {
    string name = 1;
    int64 from = 2;
    int64 to = 3;
}

message SwitchLog {
    string ts_local = 1;
    string ts_remote = 2;
    string message = 3;
    string facility = 4;
    string severity = 5;
}

message SwitchLogsResponse {
    repeated SwitchLog logs = 1;
}

message SimilarSwitchesRequest {
    string name = 1;
}

message SimilarSwitch {
    string name = 1;
    string IP = 2;
}

message SimilarSwitchesResponse {
    repeated SimilarSwitch switches = 1;
}